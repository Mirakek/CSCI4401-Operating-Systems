# -*- coding: utf-8 -*-
"""OS.ipynb

Automatically generated by Google Colaboratory python notebooks.

Original file is located at
    https://colab.research.google.com/drive/1Xv0PSQiZEgIBnZ5BGZJQMAYsJTR91F6B
"""

!apt-get install -y graphviz
!pip install pydot

import pydot
import csv

def draw(parent_name, child_name, level):
    edge = pydot.Edge(f"{parent_name}\nLevel: {level}", f"{child_name}\nLevel: {level+1}")
    graph.add_edge(edge)

def visit(node, level=0, parent=None):
    for k, v in node.items():
        if parent is not None:
            draw(parent, k, level)
        if isinstance(v, dict):
            visit(v, level=level+1, parent=k)

pid_dict = {}
with open('Fork_Output.csv', 'r') as csvfile:
    reader = csv.reader(csvfile)
    header = next(reader)
    for row in reader:
        pid, ppid = row
        if ppid not in pid_dict:
            pid_dict[ppid] = {}
        pid_dict[ppid][pid] = {}

# Root of tree
all_nodes = set(pid_dict.keys())
for children in pid_dict.values():
    all_nodes.update(children.keys())
root = None
for node in pid_dict.keys():
    if node not in all_nodes - set(pid_dict.keys()):
        root = node
        break

# Populate nodes with roots children recursively
def populate_children(pid_dict, node):
    children = pid_dict.get(node, {})
    for child in children:
        children[child] = populate_children(pid_dict, child)
    return children

tree = {root: populate_children(pid_dict, root)}

graph = pydot.Dot(graph_type='graph')
visit(tree)
graph.write_png('process_tree.png')